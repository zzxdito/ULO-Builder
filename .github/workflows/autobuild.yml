# Copyright (C) 2024 nosignal

name: ULO Autobuilder

on:
  workflow_dispatch:
    inputs:
      kernel:
        description: 'Kernel Version (ex. 6.6.6, 6.1.31-localversion)'
        required: true
        default: '6.6.6'
        type: string
      devices:
        description: "Devices"
        required: true
        default: "s905x"
        type: choice
        options:
          - s905x
          - s905x2
          - s905x3
          - s905x4
          - h5-orangepi-zeroplus2
          - h5-orangepi-zeroplus
          - h5-orangepi-prime
          - h5-orangepi-pc2
          - h6-orangepi-lite2
          - h6-orangepi-1plus
          - h6-orangepi-3
          - h6-orangepi-3lts
          - h616-orangepi-zero2
          - h618-orangepi-zero2w
          - h618-orangepi-zero3
          - rk3566-orangepi-3b
          - rk3588-orangepi-5plus
          - rk3588s-orangepi-5
      rootfs:
        description: 'ROOTFS File (ex. ImmortalWrt-21-02-7-rootfs.tar.gz)'
        required: true
        default: 'ImmortalWrt-21-02-7-rootfs.tar.gz'
        type: string
      rootfs_size:
        description: "ROOTFS Size, min 640 (756, 1024, 2048, etc)"
        required: true
        default: '1024'
        type: string
      fwinfo:
        description: 'Firmware Information'
        required: true
        default: 'your custom information at release pages'
        type: string

jobs:
  build_ipk:
    permissions:
      contents: write
    name: ULO Autobuilder
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Cleanup and Install Prerequisites
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # Cleanup Docker images if any exist
          if [ "$(docker images -q)" ]; then
              docker rmi $(docker images -q)
          else
              echo "No Docker images to remove."
          fi

          # Ensure dependencies are installed
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-distutils || pip3 install setuptools

          # Install build tools and clean up
          sudo apt-get install -y \
            lolcat build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses-dev libssl-dev rsync unzip zlib1g-dev file wget
          sudo apt-get autoremove --purge -y
          sudo apt-get clean

      - name: Build OpenWrt
        run: |
          sudo ./ulo -m "${{ inputs.devices }}" \
                     -r "${{ inputs.rootfs }}" \
                     -k "${{ inputs.kernel }}" \
                     -s "${{ inputs.rootfs_size }}"

      - name: Create Package Artifact
        run: |
          mkdir -p ./artifact
          cp -rf ./out/"${{ inputs.devices }}"/* ./artifact/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_package
          path: ./artifact/*

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/*
          tag: "${{ inputs.devices }}"
          file_glob: true
          overwrite: true
          body: |
            ## OpenWRT Release for ${{ inputs.devices }} Devices
            ULO-Builder Release from Github Workflow
            ### OpenWRT Image Information
            - **Firmware Details:**
              - Devices type: ${{ inputs.devices }}
              - Kernel version: ${{ inputs.kernel }}
              - ROOTFS File: ${{ inputs.rootfs }}
              - ROOTFS Size: ${{ inputs.rootfs_size }}
            - **Firmware Information:**
              - ${{ inputs.fwinfo }}
